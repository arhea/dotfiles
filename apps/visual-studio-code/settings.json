{
    "workbench.colorTheme": "GitHub Dark Dimmed",
    "workbench.iconTheme": "eq-material-theme-icons-darker",
    "editor.fontSize": 14,
    "editor.fontFamily": "SpaceMono Nerd Font Mono",
    "editor.lineHeight": 1.9,
    "editor.codeLensFontFamily": "SpaceMono Nerd Font Mono",
    "editor.wordWrap": "off",
    "editor.inlineSuggest.enabled": true,
    "editor.accessibilitySupport": "off",
    "editor.formatOnSave": false,
    "editor.formatOnPaste": false,
    "editor.formatOnType": false,
    "editor.codeActionsOnSave": { },
    "editor.suggestSelection": "first",

    "testExplorer.useNativeTesting": true,

    "security.workspace.trust.untrustedFiles": "open",

    // terminal settings
    "terminal.external.osxExec": "Warp.app",
    "terminal.integrated.fontFamily": "SpaceMono Nerd Font Mono",
    "terminal.integrated.fontSize": 14,
    "terminal.integrated.lineHeight": 1.9,
    "terminal.integrated.profiles.osx": {
        "zsh": {
            "path": "/opt/homebrew/bin/zsh"
        },
        "bash": {
            "path": "/opt/homebrew/bin/bash"
        }
    },

    // extensions settings
    "extensions.autoUpdate": true,
    "extensions.autoCheckUpdates": true,

    // json settings
    "json.schemaDownload.enable": true,
    "json.format.keepLines": true,
    "json.format.enable": true,
    "json.validate.enable": true,

    // prettier configuration
    "prettier.enable": true,
    "prettier.semi": false,
    "prettier.printWidth": 120,
    "prettier.trailingComma": "es5",
    "prettier.singleQuote": true,
    "prettier.vueIndentScriptAndStyle": false,

    // formatting editorconfig
    "[editorconfig]": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "EditorConfig.EditorConfig"
    },

    // typescript specific settings
    "[typescript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.codeActionsOnSave": [
            "source.organizeImports",
            "source.formatDocument",
            "source.fixAll.eslint"
        ]
    },

    // typescript specific settings
    "[javascript]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.codeActionsOnSave": [
            "source.organizeImports",
            "source.formatDocument",
            "source.fixAll.eslint"
        ]
    },

    // terraform formatting options
    "[terraform]": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "hashicorp.terraform"
    },

    // markdown formatting options
    "[markdown]": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "vscode.markdown-language-features",
        "editor.wrappingStrategy": "simple",
        "editor.wordWrap": "bounded",
        "editor.wordWrapColumn": 120
    },

    // json formatting options
    "[json]": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "vscode.json-language-features",
        "editor.wrappingStrategy": "simple",
        "editor.wordWrap": "bounded",
        "editor.wordWrapColumn": 120
    },

    "[jsonc]": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "vscode.json-language-features",
        "editor.wrappingStrategy": "simple",
        "editor.wordWrap": "bounded",
        "editor.wordWrapColumn": 120
    },

    // yaml formatting options
    "[yaml]": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "redhat.vscode-yaml",
        "editor.wrappingStrategy": "simple",
        "editor.wordWrap": "bounded",
        "editor.wordWrapColumn": 120
    },

    // css formatting options
    "[css]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.codeActionsOnSave": [ "source.formatDocument", "source.fixAll" ]
    },

    // scss formatting options
    "[scss]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.codeActionsOnSave": [ "source.formatDocument", "source.fixAll" ]
    },

    // go specific settings
    "[go]": {
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "golang.go",
        "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit",
            "source.fixAll": "explicit"
        }
    },

    "go.useLanguageServer": true,
    "gopls": {
        "ui.semanticTokens": true,
        "ui.completion.usePlaceholders": true
    },
    "go.toolsManagement.autoUpdate": true,
    "go.formatTool": "goimports",
    "go.lintTool": "golangci-lint",
    "go.lintOnSave": "workspace",
    "go.lintFlags": [ "--fast" ],

    // javascript settings
    "javascript.updateImportsOnFileMove.enabled": "always",

    // redhat yaml
    "redhat.telemetry.enabled": false,

    // error lens
    "errorLens.enabledDiagnosticLevels": [ "warning", "info", "error" ],

    // terraform
    "terraform.languageServer.enable": true,
}
